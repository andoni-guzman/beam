# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# This workflow will run the test of python Hadoop IO class.

name: Python Examples Test 

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'
  push:
    branches: ['master', 'release-*']
    tags: 'v*'
  pull_request:
    branches: ['master', 'release-*']
    tags: 'v*'
#    paths: ['sdks/python/apache_beam/examples/**',
#      'sdks/python/apache_beam/examples/**']

jobs:
  set-properties:
    runs-on: self-hosted
    outputs:
      properties: ${{ steps.test-properties.outputs.properties }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          submodules: recursive
      - id: test-properties
        uses: ./.github/actions/setup-default-test-properties

  python_examples:
    needs: set-properties
    name: Python Examples Test
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        version: ${{fromJson(needs.set-properties.outputs.properties).PythonTestProperties.ALL_SUPPORTED_VERSIONS}}
        tests: ['apache_beam/examples/complete/autocomplete_test.py, 
                 apache_beam/examples/complete/distribopt_test.py, 
                 apache_beam/examples/cookbook/mergecontacts_test.py, 
                 apache_beam/examples/cookbook/multiple_output_pardo_test.py, 
                 apache_beam/examples/dataframe/taxiride_test.py, 
                 apache_beam/examples/dataframe/wordcount_test.py,  
                 apache_beam/examples/snippets/aggregation/cogroupbykey_test.py, 
                 apache_beam/examples/snippets/aggregation/combineglobally_test.py, 
                 apache_beam/examples/snippets/aggregation/combineperkey_test.py, 
                 apache_beam/examples/snippets/aggregation/combinevalues_test.py, 
                 apache_beam/examples/snippets/aggregation/count_test.py, 
                 apache_beam/examples/snippets/aggregation/distinct_test.py, 
                 apache_beam/examples/snippets/aggregation/groupbykey_test.py, 
                 apache_beam/examples/snippets/aggregation/groupintobatches_test.py, 
                 apache_beam/examples/snippets/aggregation/latest_test.py, 
                 apache_beam/examples/snippets/aggregation/max_test.py, 
                 apache_beam/examples/snippets/aggregation/mean_test.py, 
                 apache_beam/examples/snippets/aggregation/min_test.py, 
                 apache_beam/examples/snippets/aggregation/sample_test.py, 
                 apache_beam/examples/snippets/aggregation/sum_test.py, 
                 apache_beam/examples/snippets/aggregation/top_test.py, 
                 apache_beam/examples/snippets/elementwise/filter_test.py, 
                 apache_beam/examples/snippets/elementwise/flatmap_test_test.py, 
                 apache_beam/examples/snippets/elementwise/keys_test.py, 
                 apache_beam/examples/snippets/elementwise/kvswap_test.py, 
                 apache_beam/examples/snippets/elementwise/map_test.py, 
                 apache_beam/examples/snippets/elementwise/pardo_test.py, 
                 apache_beam/examples/snippets/elementwise/partition_test.py, 
                 apache_beam/examples/snippets/elementwise/regex_test.py, 
                 apache_beam/examples/snippets/elementwise/runinference_test.py, 
                 apache_beam/examples/snippets/elementwise/tostring_test.py, 
                 apache_beam/examples/snippets/elementwise/values_test.py, 
                 apache_beam/examples/snippets/elementwise/withtimestamps_test.py, 
                 apache_beam/examples/matrix_power_test.py, 
                 apache_beam/examples/streaming_wordcount_debugging_test.py, 
                 apache_beam/examples/wordcount_minimal_test.py, 
                 apache_beam/examples/wordcount_test.py']
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          submodules: recursive
      - name: Set python version and tox env
        run: |
          echo "PYTHON_VERSION=$(echo ${{ matrix.version }} | sed -e 's/\.//g')" >> $GITHUB_ENV
      - name: Get all the tests
        run: | 
          echo "PYTHON_VERSION= ls apache_beam/>> $GITHUB_ENV
      - name: Setup environment
        uses: ./.github/actions/setup-self-hosted-action
      - name: Run :sdks:python:test-suites:tox:py${{ env.PYTHON_VERSION }}:testPy${{ env.PYTHON_VERSION }}Cloud
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
          gradle-command: :sdks:python:test-suites:tox:py${{ env.PYTHON_VERSION }}:testPy${{ env.PYTHON_VERSION }}Cloud
          arguments: > 
            "-Pposargs=${{matrix.tests}}" 
            
            
            
      - name: Run :sdks:python:test-suites:tox:py${{ env.PYTHON_VERSION }}:testPy${{ env.PYTHON_VERSION }}Cython
        uses: ./.github/actions/gradle-command-self-hosted-action
        with:
          gradle-command: :sdks:python:test-suites:tox:py${{ env.PYTHON_VERSION }}:testPy${{ env.PYTHON_VERSION }}Cython
          arguments: "-Pposargs=${{matrix.tests}}"

